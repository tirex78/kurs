/**
 * Скопирован ли массив?
 * Что выведет следующий код?
 *
 * let fruits = ["Яблоки", "Груша", "Апельсин"];
 *
 *  добавляем новое значение в "копию"
 * let shoppingCart = fruits;
 * shoppingCart.push("Банан");
 *
 *  что в fruits?
 * alert( fruits.length ); // ?
 */

// **  выведет 4, потому, что shoppingCart ссылается на fruits


/**
 * Операции с массивами
 * Давайте произведём 5 операций с массивом.
 * 
 *     Создайте массив styles с элементами «Джаз» и «Блюз».
 *     Добавьте «Рок-н-ролл» в конец.
 *     Замените значение в середине на «Классика». Ваш код для поиска значения в середине должен работать для массивов с любой длиной.
 *     Удалите первый элемент массива и покажите его.
 *     Вставьте Рэп и Регги в начало массива.
 * 
 * Массив по ходу выполнения операций:
 * 
 * Джаз, Блюз
 * Джаз, Блюз, Рок-н-ролл
 * Джаз, Классика, Рок-н-ролл
 * Классика, Рок-н-ролл
 * Рэп, Регги, Классика, Рок-н-ролл
 */

const styles = ['Джаз', 'Блюз']

console.log('1', styles)

styles.push('Рок-н-ролл')

console.log('2', styles)

styles[Math.floor((styles.length - 1) / 2)] = 'Классика'

console.log('3', styles)
console.log('4', styles.shift())

console.log('5', styles)

styles.unshift('Рэп', 'Регги')

console.log('6', styles)

/**
 * Вызов в контексте массива
 *
 * Каков результат? Почему?
 *
 * let arr = ["a", "b"];
 *
 * arr.push(function() {
 *   alert( this );
 * });
 *
 * arr[2](); // ?
 */

// ** сначала добавляем в массив функцию, затем запускается функция находящаяся в массиве по индексу 2, которая выведет все содержимое массива в алерт



/**
 * Сумма введённых чисел
 * 
 * Напишите функцию sumInput(), которая:
 * 
 *     Просит пользователя ввести значения, используя prompt и сохраняет их в массив.
 *     Заканчивает запрашивать значения, когда пользователь введёт не числовое значение, пустую строку или нажмёт «Отмена».
 *     Подсчитывает и возвращает сумму элементов массива.
 * 
 * P.S. Ноль 0 – считается числом, не останавливайте ввод значений при вводе «0».
 */

const sumInput = () => {

  let arr = []

  while (true) {

    const num = prompt('Enter number')

    if (isFinite(num) && num > 0) {
      arr.push(+num)
    } else if (num === '' || num === null) {
      break
    }
  }

  let sum = 0

  for (key of arr) {
    sum += key
  }

  return sum
}

console.log(sumInput())


/**
 * 
 * Подмассив наибольшей суммы
 * 
 * На входе массив чисел, например: arr = [1, -2, 3, 4, -9, 6].
 * 
 * Задача: найти непрерывный подмассив в arr, сумма элементов в котором максимальна.
 * 
 * Функция getMaxSubSum(arr) должна возвращать эту сумму.
 * 
 * Например:
 * 
 * getMaxSubSum([-1, 2, 3, -9]) == 5 (сумма выделенных элементов)
 * getMaxSubSum([2, -1, 2, 3, -9]) == 6
 * getMaxSubSum([-1, 2, 3, -9, 11]) == 11
 * getMaxSubSum([-2, -1, 1, 2]) == 3
 * getMaxSubSum([100, -9, 2, -3, 5]) == 100
 * getMaxSubSum([1, 2, 3]) == 6 (берём все)
 * 
 * Если все элементы отрицательные – ничего не берём(подмассив пустой) и сумма равна «0»:
 * 
 * getMaxSubSum([-1, -2, -3]) = 0
 * 
 * Попробуйте придумать быстрое решение: O(n2), а лучше за О(n) операций.
 * 
 * 
*/

const getMaxSubSum = arr => {

  let max = 0;
  let partSum = 0;

  for (let item of arr) {
    partSum += item
    max = Math.max(max, partSum)
    if (partSum < 0) partSum = 0
  }

  return max

}
getMaxSubSum([-1, 2, 3, -9])
getMaxSubSum([2, -1, 2, 3, -9])
getMaxSubSum([-1, 2, 3, -9, 11])
getMaxSubSum([100, -9, 2, -3, 5])
getMaxSubSum([1, 2, 3])